var N=Object.defineProperty;var y=(t,e,n)=>e in t?N(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var b=(t,e,n)=>(y(t,typeof e!="symbol"?e+"":e,n),n),v=(t,e,n)=>{if(!e.has(t))throw TypeError("Cannot "+n)};var o=(t,e,n)=>(v(t,e,"read from private field"),n?n.call(t):e.get(t)),d=(t,e,n)=>{if(e.has(t))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(t):e.set(t,n)},h=(t,e,n,a)=>(v(t,e,"write to private field"),a?a.call(t,n):e.set(t,n),n);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))a(i);new MutationObserver(i=>{for(const l of i)if(l.type==="childList")for(const f of l.addedNodes)f.tagName==="LINK"&&f.rel==="modulepreload"&&a(f)}).observe(document,{childList:!0,subtree:!0});function n(i){const l={};return i.integrity&&(l.integrity=i.integrity),i.referrerPolicy&&(l.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?l.credentials="include":i.crossOrigin==="anonymous"?l.credentials="omit":l.credentials="same-origin",l}function a(i){if(i.ep)return;i.ep=!0;const l=n(i);fetch(i.href,l)}})();var c;const s=class s{constructor(e,n,a){d(this,c,void 0);this.name=e,this.rank=n,this.village=a,h(this,c,[]),s.allNinjas.push(this)}performRandomJutsu(){if(o(this,c).length===0){console.log("No jutsus available for this ninja.");return}const e=Math.floor(Math.random()*o(this,c).length),n=o(this,c)[e];console.log(`${this.name} performed ${n} jutsu.`)}completeMission(){console.log(`${this.name} completed a mission as a ${this.rank} ninja from ${this.village}.`)}static getRandomNinja(){if(s.allNinjas.length===0)return console.log("No ninjas available."),null;const e=Math.floor(Math.random()*s.allNinjas.length);return s.allNinjas[e]}};c=new WeakMap,b(s,"allNinjas",[]);let p=s;var u,r;const g=class g{constructor(e,n,a){d(this,r,void 0);this.name=e,this.numberOfResidents=n,this.kage=a,h(this,r,[]),o(g,u).push(this)}addNinja(e,n){const a=new p(e,n,this.name);return o(this,r).push(a),a}promoteNinjaRank(e){const n=["Genin","Chunin","Jonin"],a=n.indexOf(e.rank);a<n.length-1?(e.rank=n[a+1],console.log(`${e.name} has been promoted to ${e.rank}.`)):console.log(`${e.name} is already at the highest rank.`)}exileNinja(e){const n=o(this,r).indexOf(e);n!==-1?(o(this,r).splice(n,1),console.log(`${e.name} has been exiled from ${this.name}.`)):console.log(`${e.name} is not part of ${this.name}.`)}findNinjasByRank(e){return o(this,r).filter(n=>n.rank===e)}static beginChuninExams(){console.log("Chunin Exams have begun across all villages.")}};u=new WeakMap,r=new WeakMap,d(g,u,[]);let m=g;const k=()=>{const t=document.querySelector("#app"),e=document.createElement("div");e.innerHTML=`
      <h2>Add Ninja</h2>
      <form id="ninja-form">
          <label for="ninja-name">Ninja Name:</label>
          <input type="text" name='name' id="ninja-name" required>
          <label for="ninja-rank">Ninja Rank:</label>
          <input type="text" name='rank' id="ninja-rank" required>
          <button type="submit">Add Ninja</button>
      </form>
  `;const n=document.createElement("div");n.id="villageForm",n.innerHTML=`
  <h2>Add Village</h2>
  <form id="village-form">
      <label for="village-name">Village Name:</label>
      <input type="text" name='name' id="village-name" required>
      <label for="village-residents">Number of Residents:</label>
      <input type="number" name='residents' id="village-residents" required>
      <label for="village-kage">Kage:</label>
      <input type="text" name='kage' id="village-kage" required>
      <button type="submit">Add Village</button>
  </form>
  `,t.append(e,n)},$=t=>{const e=document.createElement("div"),n=document.createElement("h3");n.textContent=t.name;const a=document.createElement("ul");a.innerHTML=j(t),e.append(n,a),document.querySelector("#app").append(e)},E=t=>m.allVillages.find(e=>e.name===t),j=t=>{const e=t.ninjas;return e.length>0?e.map(n=>`<li>${n.name} - ${n.rank}</li>`).join(""):"No ninjas in this village."},x=()=>{const t=document.querySelector("#villages");t.innerHTML=m.allVillages.map(e=>`<option value="${e.name}">${e.name}</option>`).join("")},L=t=>{t.preventDefault();const e=Object.fromEntries(new FormData(t.target)),n=new m(e.name,e.residents,e.kage);$(n),x(),t.target.reset()},M=t=>{t.preventDefault();const e=t.target.elements.village.value,n=E(e);if(n){const a=Object.fromEntries(new FormData(t.target));n.addNinja(a.name,a.rank),document.querySelector(`#villageUL${e}`).innerHTML=j(n),t.target.reset()}else console.log("Village not found.")},O=()=>{k(),document.getElementById("village-form").addEventListener("submit",L),document.getElementById("ninja-form").addEventListener("submit",M)};O();
